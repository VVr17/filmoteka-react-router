{"version":3,"file":"static/js/253.184e1d8e.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","constants/constants.js","pages/Movies/Movies.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieListStyled = styled.ul`\n  margin-top: ${p => p.theme.space[3]}px;\n  a {\n    display: block;\n    padding-top: ${p => p.theme.space[1]}px;\n    padding-bottom: ${p => p.theme.space[1]}px;\n\n    &:hover,\n    &:focus {\n      color: ${p => p.theme.colors.accent};\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { MovieListStyled } from './MovieList.styled';\nimport { object } from 'prop-types';\n\nexport const MovieList = ({\n  movies,\n  isMoviePage = false,\n  previousLocation,\n}) => {\n  return (\n    <MovieListStyled>\n      {isMoviePage\n        ? movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: `${previousLocation}` }}>\n                {title}\n              </Link>\n            </li>\n          ))\n        : movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`movies/${id}`} state={{ from: `${previousLocation}` }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n    </MovieListStyled>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(object).isRequired,\n  isMoviePage: PropTypes.bool,\n  previousLocation: PropTypes.string.isRequired,\n};\n","export const API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const TRENDING_PATH_URL = 'trending/movie/day';\nexport const SEARCH_PATH_URL = 'search/movie';\nexport const GET_MOVIE_DETAILS_PATH_URL = 'movie/';\nexport const GET_CREDIT_URL = '/credits';\nexport const GET_REVIEWS_URL = '/reviews';\nexport const IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\nexport const FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.main`\n  padding: ${p => p.theme.space[4]}px;\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchingFormStyled = styled.form`\n  label {\n    display: flex;\n    flex-direction: column;\n  }\n\n  input {\n    margin-top: ${p => p.theme.space[3]}px;\n    padding: ${p => p.theme.space[2]}px;\n    border-radius: 4px;\n  }\n`;\n","import React from 'react';\nimport { SearchingFormStyled } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  return (\n    <SearchingFormStyled onSubmit={onSubmit}>\n      <label>\n        Search\n        <input\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"Please, enter keyword for searching\"\n        />\n      </label>\n    </SearchingFormStyled>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { apiService } from 'services/Api';\nimport { Container } from './Movies.styled';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { toast } from 'react-toastify'; // Notifications\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    getMovies(query);\n\n    async function getMovies(query) {\n      try {\n        const results = await apiService.searchByKeyWord(query);\n\n        if (results.length === 0) {\n          toast.warn(`There are no movies found. Please, try again`);\n        }\n\n        setMovies([...results]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [query]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const { query } = event.target.elements;\n    const queryTrimmed = query.value.trim();\n\n    if (!queryTrimmed) {\n      toast.warn(`Query field cannot be empty`);\n      return;\n    }\n\n    setSearchParams({ query: queryTrimmed });\n    event.target.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={onSubmit} />\n      {movies.length > 0 && (\n        <MovieList\n          movies={movies}\n          isMoviePage={true}\n          previousLocation={location.pathname + location.search}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  GET_CREDIT_URL,\n  GET_MOVIE_DETAILS_PATH_URL,\n  GET_REVIEWS_URL,\n  SEARCH_PATH_URL,\n  TRENDING_PATH_URL,\n} from 'constants/constants';\n\nclass Api {\n  #params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  async getTrendingMovies() {\n    const url = `${BASE_URL}${TRENDING_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async searchByKeyWord(query) {\n    const url = `${BASE_URL}${SEARCH_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, query: query, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieDetailsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params },\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieCreditsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}${GET_CREDIT_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params },\n      });\n      return response.data.cast;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieReviewsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}${GET_REVIEWS_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const apiService = new Api();\n"],"names":["MovieListStyled","styled","p","theme","space","colors","accent","MovieList","movies","isMoviePage","previousLocation","map","id","title","to","state","from","API_KEY","BASE_URL","TRENDING_PATH_URL","SEARCH_PATH_URL","GET_MOVIE_DETAILS_PATH_URL","GET_CREDIT_URL","GET_REVIEWS_URL","IMAGE_BASE_API_URL","FALLBACK_IMAGE_URL","Container","SearchingFormStyled","SearchForm","onSubmit","name","type","placeholder","useState","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","apiService","results","length","toast","console","log","getMovies","event","preventDefault","queryTrimmed","target","elements","value","trim","reset","pathname","search","Api","api_key","language","url","axios","params","this","page","response","data","movieId","cast"],"sourceRoot":""}