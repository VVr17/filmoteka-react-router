{"version":3,"file":"static/js/779.92339dd1.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","constants/constants.js","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  li {\n    padding: ${p => p.theme.space[3]}px;\n    border-radius: 5px;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 1),\n      -23px 0 20px -23px rgba(0, 0, 0, 0.8),\n      23px 0 20px -23px rgba(0, 0, 0, 0.8), 0 0 40px rgba(0, 0, 0, 0.1);\n    max-height: 300px;\n    overflow-y: scroll;\n\n    @media screen and (max-width: 479.98px) {\n      overflow-x: scroll;\n    }\n\n    &:not(:last-of-type) {\n      margin-bottom: ${p => p.theme.space[2]}px;\n    }\n  }\n\n  h3 {\n    margin-bottom: ${p => p.theme.space[2]}px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiService } from 'services/Api';\nimport { ReviewList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const params = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getReviews();\n\n    async function getReviews() {\n      const reviews = await apiService.getMovieReviewsById(params.movieId);\n      setReviews(reviews);\n    }\n  }, [params.movieId]);\n\n  if (!reviews) return null;\n\n  return (\n    <>\n      {reviews.length === 0 && <p>We do not have any reviews for this movie</p>}\n      {reviews.length !== 0 && (\n        <ReviewList>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ReviewList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","export const API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const TRENDING_PATH_URL = 'trending/movie/day';\nexport const SEARCH_PATH_URL = 'search/movie';\nexport const GET_MOVIE_DETAILS_PATH_URL = 'movie/';\nexport const GET_CREDIT_URL = '/credits';\nexport const GET_REVIEWS_URL = '/reviews';\nexport const IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\nexport const FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  GET_CREDIT_URL,\n  GET_MOVIE_DETAILS_PATH_URL,\n  GET_REVIEWS_URL,\n  SEARCH_PATH_URL,\n  TRENDING_PATH_URL,\n} from 'constants/constants';\n\nclass Api {\n  #params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  async getTrendingMovies() {\n    const url = `${BASE_URL}${TRENDING_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async searchByKeyWord(query) {\n    const url = `${BASE_URL}${SEARCH_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, query: query, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieDetailsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params },\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieCreditsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}${GET_CREDIT_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params },\n      });\n      return response.data.cast;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieReviewsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}${GET_REVIEWS_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const apiService = new Api();\n"],"names":["ReviewList","styled","p","theme","space","params","useParams","useState","reviews","setReviews","useEffect","apiService","movieId","getReviews","length","map","author","content","id","API_KEY","BASE_URL","TRENDING_PATH_URL","SEARCH_PATH_URL","GET_MOVIE_DETAILS_PATH_URL","GET_CREDIT_URL","GET_REVIEWS_URL","IMAGE_BASE_API_URL","FALLBACK_IMAGE_URL","Api","api_key","language","url","axios","this","page","response","data","results","console","log","query","cast"],"sourceRoot":""}