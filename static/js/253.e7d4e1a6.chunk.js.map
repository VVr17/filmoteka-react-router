{"version":3,"file":"static/js/253.e7d4e1a6.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieCardItem/MovieCardItem.styled.js","components/MovieList/MovieCardItem/MovieCardItem.jsx","components/MovieList/MovieList.jsx","constants/constants.js","pages/Movies/Movies.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieListStyled = styled.ul`\n  margin-top: ${p => p.theme.space[4]}px;\n  font-size: 18px;\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n  flex-direction: column;\n\n  @media screen and (min-width: 480px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: ${p => p.theme.space[5]}px;\n  }\n\n  li {\n    border-radius: 5px;\n    box-shadow: ${p => p.theme.boxShadow.second};\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      transform: scale(1.03);\n      color: ${p => p.theme.colors.accent};\n    }\n    @media screen and (min-width: 480px) {\n      flex-basis: calc((100% - ${p => p.theme.space[3]}px) / 2);\n    }\n\n    @media screen and (min-width: 768px) {\n      flex-basis: calc((100% - 2 * ${p => p.theme.space[3]}px) / 3);\n    }\n\n    @media screen and (min-width: 1200px) {\n      flex-basis: calc((100% - 3 * ${p => p.theme.space[3]}px) / 4);\n    }\n  }\n\n  a {\n    display: block;\n    padding-top: ${p => p.theme.space[1]}px;\n    padding-left: ${p => p.theme.space[1]}px;\n    padding-right: ${p => p.theme.space[1]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const MovieCardItemStyled = styled.div`\n  text-align: center;\n\n  img {\n    border-radius: 5px;\n    margin-bottom: ${p => p.theme.space[2]}px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieCardItemStyled } from './MovieCardItem.styled';\n\nexport const MovieCardItem = ({ title, image }) => {\n  return (\n    <MovieCardItemStyled>\n      <img src={image} alt={title} width=\"200px\" height=\"300px\" />\n      <h3>{title}</h3>\n    </MovieCardItemStyled>\n  );\n};\nMovieCardItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { MovieListStyled } from './MovieList.styled';\nimport { MovieCardItem } from './MovieCardItem/MovieCardItem';\nimport { FALLBACK_IMAGE_URL, IMAGE_BASE_API_URL } from 'constants/constants';\n\nexport const MovieList = ({\n  movies,\n  isMoviePage = false,\n  previousLocation,\n}) => (\n  <MovieListStyled>\n    {isMoviePage\n      ? movies.map(({ id, title, poster_path }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: `${previousLocation}` }}>\n              <MovieCardItem\n                title={title}\n                image={\n                  poster_path\n                    ? IMAGE_BASE_API_URL + poster_path\n                    : FALLBACK_IMAGE_URL\n                }\n              />\n            </Link>\n          </li>\n        ))\n      : movies.map(({ id, title, poster_path }) => (\n          <li key={id}>\n            <Link to={`movies/${id}`} state={{ from: `${previousLocation}` }}>\n              <MovieCardItem\n                title={title}\n                image={\n                  poster_path\n                    ? IMAGE_BASE_API_URL + poster_path\n                    : FALLBACK_IMAGE_URL\n                }\n              />\n            </Link>\n          </li>\n        ))}\n  </MovieListStyled>\n);\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isMoviePage: PropTypes.bool,\n  previousLocation: PropTypes.string.isRequired,\n};\n","export const API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const TRENDING_PATH_URL = 'trending/movie/day';\nexport const SEARCH_PATH_URL = 'search/movie';\nexport const GET_MOVIE_DETAILS_PATH_URL = 'movie/';\nexport const GET_CREDIT_URL = '/credits';\nexport const GET_REVIEWS_URL = '/reviews';\nexport const IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\nexport const FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.main`\n  padding: ${p => p.theme.space[4]}px;\n\n  h2 {\n    margin-top: ${p => p.theme.space[4]}px;\n    color: ${p => p.theme.colors.accentTextColor};\n    text-align: center;\n    font-size: 24px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n      font-size: 36px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchingFormStyled = styled.form`\n  label {\n    display: flex;\n    flex-direction: column;\n  }\n\n  input {\n    margin-top: ${p => p.theme.space[3]}px;\n    padding: ${p => p.theme.space[2]}px;\n    border-radius: 4px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchingFormStyled } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => (\n  <SearchingFormStyled onSubmit={onSubmit}>\n    <label>\n      <input\n        name=\"query\"\n        type=\"text\"\n        placeholder=\"Please, enter keyword for searching\"\n      />\n    </label>\n  </SearchingFormStyled>\n);\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { apiService } from 'services/Api';\nimport { Container } from './Movies.styled';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { toast } from 'react-toastify'; // Notifications\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    getMovies(query);\n\n    async function getMovies(query) {\n      try {\n        const results = await apiService.searchByKeyWord(query);\n\n        if (results.length === 0) {\n          toast.warn(`There are no movies found. Please, try again`);\n        }\n\n        setMovies([...results]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [query]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const { query } = event.target.elements;\n    const queryTrimmed = query.value.trim();\n\n    if (!queryTrimmed) {\n      toast.warn(`Query field cannot be empty`);\n      return;\n    }\n\n    setSearchParams({ query: queryTrimmed });\n    event.target.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={onSubmit} />\n      {movies.length > 0 && (\n        <>\n          <h2>Upon your query \"{query}\" we found</h2>\n          <MovieList\n            movies={movies}\n            isMoviePage={true}\n            previousLocation={location.pathname + location.search}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  GET_CREDIT_URL,\n  GET_MOVIE_DETAILS_PATH_URL,\n  GET_REVIEWS_URL,\n  SEARCH_PATH_URL,\n  TRENDING_PATH_URL,\n} from 'constants/constants';\n\nclass Api {\n  #params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  async getTrendingMovies() {\n    const url = `${BASE_URL}${TRENDING_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async searchByKeyWord(query) {\n    const url = `${BASE_URL}${SEARCH_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, query: query, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieDetailsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params },\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieCreditsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}${GET_CREDIT_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params },\n      });\n      return response.data.cast;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieReviewsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}${GET_REVIEWS_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const apiService = new Api();\n"],"names":["MovieListStyled","styled","p","theme","space","boxShadow","second","colors","accent","MovieCardItemStyled","MovieCardItem","title","image","src","alt","width","height","MovieList","movies","isMoviePage","previousLocation","map","id","poster_path","to","state","from","IMAGE_BASE_API_URL","FALLBACK_IMAGE_URL","API_KEY","BASE_URL","TRENDING_PATH_URL","SEARCH_PATH_URL","GET_MOVIE_DETAILS_PATH_URL","GET_CREDIT_URL","GET_REVIEWS_URL","Container","accentTextColor","SearchingFormStyled","SearchForm","onSubmit","name","type","placeholder","useState","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","apiService","results","length","toast","console","log","getMovies","event","preventDefault","queryTrimmed","target","elements","value","trim","reset","pathname","search","Api","api_key","language","url","axios","params","this","page","response","data","movieId","cast"],"sourceRoot":""}