{"version":3,"file":"static/js/878.3ede0d18.chunk.js","mappings":"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","sources":["components/Cast/ActorCard/ActorCard.styled.js","components/Cast/ActorCard/ActorCard.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","constants/constants.js","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  padding-top: ${p => p.theme.space[1]}px;\n  padding-left: ${p => p.theme.space[1]}px;\n  padding-right: ${p => p.theme.space[1]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n\n  img {\n    width: 100%;\n    height: auto;\n    margin-bottom: ${p => p.theme.space[2]}px;\n    border-radius: 5px;\n  }\n\n  p {\n    padding-top: ${p => p.theme.space[2]}px;\n    padding-bottom: ${p => p.theme.space[2]}px;\n  }\n\n  span {\n    display: block;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from './ActorCard.styled';\n\nexport const ActorCard = ({ image, character, name }) => {\n  return (\n    <Card>\n      <img src={image} alt={name} width=\"100px\" height=\"150px\" />\n      <p>\n        name: <span>{name}</span>\n      </p>\n      <p>\n        character: <span>{character}</span>\n      </p>\n    </Card>\n  );\n};\n\nActorCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","const { default: styled } = require('@emotion/styled');\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n\n  li {\n    flex-basis: calc((100% - 80px) / 4);\n    border-radius: 5px;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 1),\n      -23px 0 20px -23px rgba(0, 0, 0, 0.8),\n      23px 0 20px -23px rgba(0, 0, 0, 0.8), 0 0 40px rgba(0, 0, 0, 0.1);\n    text-align: center;\n  }\n`;\n","import { FALLBACK_IMAGE_URL, IMAGE_BASE_API_URL } from 'constants/constants';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiService } from 'services/Api';\nimport { ActorCard } from './ActorCard/ActorCard';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const params = useParams();\n\n  useEffect(() => {\n    getMovieCast();\n\n    async function getMovieCast() {\n      const cast = await apiService.getMovieCreditsById(params.movieId);\n      const actors = cast.length > 20 ? cast.slice(0, 20) : cast;\n      setCast(actors);\n    }\n  }, [params.movieId]);\n\n  if (!cast) return null;\n\n  return (\n    <CastList>\n      {cast.map(({ id, profile_path, character, original_name }) => (\n        <li key={id}>\n          <ActorCard\n            image={\n              profile_path\n                ? IMAGE_BASE_API_URL + profile_path\n                : FALLBACK_IMAGE_URL\n            }\n            name={original_name}\n            character={character}\n          />\n        </li>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","export const API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const TRENDING_PATH_URL = 'trending/movie/day';\nexport const SEARCH_PATH_URL = 'search/movie';\nexport const GET_MOVIE_DETAILS_PATH_URL = 'movie/';\nexport const GET_CREDIT_URL = '/credits';\nexport const GET_REVIEWS_URL = '/reviews';\nexport const IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\nexport const FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  GET_CREDIT_URL,\n  GET_MOVIE_DETAILS_PATH_URL,\n  GET_REVIEWS_URL,\n  SEARCH_PATH_URL,\n  TRENDING_PATH_URL,\n} from 'constants/constants';\n\nclass Api {\n  #params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  async getTrendingMovies() {\n    const url = `${BASE_URL}${TRENDING_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async searchByKeyWord(query) {\n    const url = `${BASE_URL}${SEARCH_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, query: query, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieDetailsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params },\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieCreditsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}${GET_CREDIT_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params },\n      });\n      return response.data.cast;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieReviewsById(movieId) {\n    const url = `${BASE_URL}${GET_MOVIE_DETAILS_PATH_URL}${movieId}${GET_REVIEWS_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { ...this.#params, page: 1 },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const apiService = new Api();\n"],"names":["Card","styled","p","theme","space","ActorCard","image","character","name","src","alt","width","height","CastList","require","default","ul","useState","cast","setCast","params","useParams","useEffect","apiService","movieId","actors","length","slice","getMovieCast","map","id","profile_path","original_name","IMAGE_BASE_API_URL","FALLBACK_IMAGE_URL","API_KEY","BASE_URL","TRENDING_PATH_URL","SEARCH_PATH_URL","GET_MOVIE_DETAILS_PATH_URL","GET_CREDIT_URL","GET_REVIEWS_URL","Api","api_key","language","url","axios","this","page","response","data","results","console","log","query"],"sourceRoot":""}